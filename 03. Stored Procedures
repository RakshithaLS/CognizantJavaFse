//SCENARIO 1

DELIMITER //

CREATE PROCEDURE ProcessMonthlyInterest()
BEGIN
    DECLARE done INT DEFAULT 0;
    DECLARE account_id INT;
    DECLARE balance DECIMAL(10,2);
    DECLARE cur CURSOR FOR SELECT account_id, balance FROM SavingsAccounts;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
    
    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO account_id, balance;
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Apply 1% interest to the current balance
        SET balance = balance + (balance * 0.01);

        -- Update the account with the new balance
        UPDATE SavingsAccounts SET balance = balance WHERE account_id = account_id;
    END LOOP;

    CLOSE cur;
END //

DELIMITER ;

//SCENARIO 2

DELIMITER //

CREATE PROCEDURE UpdateEmployeeBonus(IN department_name VARCHAR(100), IN bonus_percentage DECIMAL(5,2))
BEGIN
    -- Update the salary by adding the bonus percentage
    UPDATE Employees
    SET salary = salary + (salary * bonus_percentage / 100)
    WHERE department = department_name;
    
END //

DELIMITER ;

//SCENARIO 3

DELIMITER //

CREATE PROCEDURE TransferFunds(IN source_account_id INT, IN destination_account_id INT, IN amount DECIMAL(10,2))
BEGIN
    DECLARE current_balance DECIMAL(10,2);

    -- Check the balance of the source account
    SELECT balance INTO current_balance FROM Accounts WHERE account_id = source_account_id;

    -- Check if the source account has sufficient balance
    IF current_balance >= amount THEN
        -- Deduct the amount from the source account
        UPDATE Accounts SET balance = balance - amount WHERE account_id = source_account_id;

        -- Add the amount to the destination account
        UPDATE Accounts SET balance = balance + amount WHERE account_id = destination_account_id;
    ELSE
        -- Insufficient funds, raise an error
        SIGNAL SQLSTATE '5000' SET MESSAGE_TEXT = 'Insufficient funds in the source account';
    END IF;
    
END //

DELIMITER ;
