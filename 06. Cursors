//SCENARIO

SET SERVEROUTPUT ON;
DECLARE
    CURSOR c_transactions IS
        SELECT DISTINCT c.CustomerID, c.Name, t.TransactionDate, t.Amount, t.TransactionType
        FROM Customers c
        JOIN Accounts a ON c.CustomerID = a.CustomerID
        JOIN Transactions t ON a.AccountID = t.AccountID
        WHERE EXTRACT(MONTH FROM t.TransactionDate) = EXTRACT(MONTH FROM SYSDATE)
          AND EXTRACT(YEAR FROM t.TransactionDate) = EXTRACT(YEAR FROM SYSDATE);
          
    v_customerID Customers.CustomerID%TYPE;
    v_name Customers.Name%TYPE;
    v_transactionDate Transactions.TransactionDate%TYPE;
    v_amount Transactions.Amount%TYPE;
    v_transactionType Transactions.TransactionType%TYPE;

BEGIN
    OPEN c_transactions;
    
    LOOP
        FETCH c_transactions INTO v_customerID, v_name, v_transactionDate, v_amount, v_transactionType;
        EXIT WHEN c_transactions%NOTFOUND;
        
        -- Print the statement (for demonstration purposes, using DBMS_OUTPUT)
        DBMS_OUTPUT.PUT_LINE('CustomerID: ' || v_customerID);
        DBMS_OUTPUT.PUT_LINE('Name: ' || v_name);
        DBMS_OUTPUT.PUT_LINE('Transaction Date: ' || v_transactionDate);
        DBMS_OUTPUT.PUT_LINE('Amount: ' || v_amount);
        DBMS_OUTPUT.PUT_LINE('Transaction Type: ' || v_transactionType);
        DBMS_OUTPUT.PUT_LINE('--------------------------');
    END LOOP;
    
    CLOSE c_transactions;
END;
/

//SCENARIO 2

DECLARE
    CURSOR c_accounts IS
        SELECT AccountID, Balance
        FROM Accounts;
    
    v_accountID Accounts.AccountID%TYPE;
    v_balance Accounts.Balance%TYPE;
    v_annual_fee NUMBER := 50; -- Example annual fee

BEGIN
    OPEN c_accounts;
    
    LOOP
        FETCH c_accounts INTO v_accountID, v_balance;
        EXIT WHEN c_accounts%NOTFOUND;
        
        -- Deduct the annual fee
        UPDATE Accounts
        SET Balance = v_balance - v_annual_fee
        WHERE AccountID = v_accountID;
        
        -- Optionally, log the update
        DBMS_OUTPUT.PUT_LINE('Applied fee to AccountID: ' || v_accountID);
    END LOOP;
    
    CLOSE c_accounts;
END;
/

//SCENARIO 3

DECLARE
    CURSOR c_loans IS
        SELECT LoanID, InterestRate
        FROM Loans;
    
    v_loanID Loans.LoanID%TYPE;
    v_currentInterestRate Loans.InterestRate%TYPE;
    v_newInterestRate NUMBER;
    
    -- Example function to calculate new interest rate
    FUNCTION calculate_new_interest_rate(p_current_rate NUMBER) RETURN NUMBER IS
    BEGIN
        RETURN p_current_rate + 0.01; -- Example: increase interest rate by 1%
    END;

BEGIN
    OPEN c_loans;
    
    LOOP
        FETCH c_loans INTO v_loanID, v_currentInterestRate;
        EXIT WHEN c_loans%NOTFOUND;
        
        v_newInterestRate := calculate_new_interest_rate(v_currentInterestRate);
        
        -- Update the interest rate
        UPDATE Loans
        SET InterestRate = v_newInterestRate
        WHERE LoanID = v_loanID;
        
        -- Optionally, log the update
        DBMS_OUTPUT.PUT_LINE('Updated LoanID: ' || v_loanID || ' to new interest rate: ' || v_newInterestRate);
    END LOOP;
    
    CLOSE c_loans;
END;
/
